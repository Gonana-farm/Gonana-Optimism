{
  "address": "0x6D231e4Ca805A00d08626e79B24bDfed35f02cFF",
  "abi": [
    {
      "inputs": [],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "DoNotHaveGasSpent",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "InsufficientFunds",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "InvalidPrice",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "InvalidProductState",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "NotOwner",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "ProductAlreadyExists",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "TransacationWasNotSuccessful",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "WrongSignature",
      "type": "error"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "time",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "GasClaimed",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "productID",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "buyer",
          "type": "address"
        }
      ],
      "name": "OrderConfirmed",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "productID",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "buyer",
          "type": "address"
        }
      ],
      "name": "OrderPlaced",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "productID",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "seller",
          "type": "address"
        }
      ],
      "name": "ProductCreated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "productID",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "ProductListed",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "productID",
          "type": "string"
        }
      ],
      "name": "ProductUnlisted",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "_productID",
          "type": "string"
        }
      ],
      "name": "cancelOrder",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_owner",
          "type": "address"
        }
      ],
      "name": "changeOwner",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "checkGasDue",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "claimAllGas",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "_productID",
          "type": "string"
        }
      ],
      "name": "confirmOrder",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "_productID",
          "type": "string"
        },
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        },
        {
          "internalType": "string",
          "name": "_merchantID",
          "type": "string"
        },
        {
          "internalType": "address",
          "name": "creator",
          "type": "address"
        }
      ],
      "name": "createProduct",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "gasSpent",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "_productID",
          "type": "string"
        },
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        },
        {
          "internalType": "string",
          "name": "_buyerID",
          "type": "string"
        }
      ],
      "name": "orderProduct",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "name": "orders",
      "outputs": [
        {
          "internalType": "string",
          "name": "productID",
          "type": "string"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "buyerAddress",
          "type": "address"
        },
        {
          "internalType": "string",
          "name": "buyerID",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "name": "products",
      "outputs": [
        {
          "internalType": "string",
          "name": "productID",
          "type": "string"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "wallet",
          "type": "address"
        },
        {
          "internalType": "string",
          "name": "hash",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "merchantID",
          "type": "string"
        },
        {
          "internalType": "enum Marketplace.ProductState",
          "name": "state",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "caller",
          "type": "address"
        }
      ],
      "name": "redeemGas",
      "outputs": [
        {
          "internalType": "bool",
          "name": "sent",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "_productID",
          "type": "string"
        }
      ],
      "name": "unlistProduct",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "_productID",
          "type": "string"
        }
      ],
      "name": "viewOrder",
      "outputs": [
        {
          "components": [
            {
              "internalType": "string",
              "name": "productID",
              "type": "string"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "buyerAddress",
              "type": "address"
            },
            {
              "internalType": "string",
              "name": "buyerID",
              "type": "string"
            }
          ],
          "internalType": "struct Marketplace.Order",
          "name": "",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "_productID",
          "type": "string"
        }
      ],
      "name": "viewProduct",
      "outputs": [
        {
          "components": [
            {
              "internalType": "string",
              "name": "productID",
              "type": "string"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "wallet",
              "type": "address"
            },
            {
              "internalType": "string",
              "name": "hash",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "merchantID",
              "type": "string"
            },
            {
              "internalType": "enum Marketplace.ProductState",
              "name": "state",
              "type": "uint8"
            }
          ],
          "internalType": "struct Marketplace.Product",
          "name": "",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "transactionHash": "0xa1e0075cb96ce1978026a0f30a8bb5c636f438c7775e04c6b9027d519dfa77fc",
  "receipt": {
    "to": null,
    "from": "0x854dEDA681E0efBCaA1c7BF95953799C05D713A2",
    "contractAddress": "0x6D231e4Ca805A00d08626e79B24bDfed35f02cFF",
    "transactionIndex": 6,
    "gasUsed": "2464121",
    "logsBloom": "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000",
    "blockHash": "0xbccd22294e8326caa7ffcc4bf46bdec621c50db4efc91301d16926ed9851624c",
    "transactionHash": "0xa1e0075cb96ce1978026a0f30a8bb5c636f438c7775e04c6b9027d519dfa77fc",
    "logs": [],
    "blockNumber": 1588395,
    "cumulativeGasUsed": "3116558",
    "status": 1,
    "byzantium": true
  },
  "args": [],
  "numDeployments": 1,
  "solcInputHash": "3dde310e33af037af476eaceadb6ae8e",
  "metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"DoNotHaveGasSpent\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InsufficientFunds\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidPrice\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidProductState\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotOwner\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ProductAlreadyExists\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TransacationWasNotSuccessful\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"WrongSignature\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"time\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"GasClaimed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"productID\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"buyer\",\"type\":\"address\"}],\"name\":\"OrderConfirmed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"productID\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"buyer\",\"type\":\"address\"}],\"name\":\"OrderPlaced\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"productID\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"seller\",\"type\":\"address\"}],\"name\":\"ProductCreated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"productID\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"ProductListed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"productID\",\"type\":\"string\"}],\"name\":\"ProductUnlisted\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_productID\",\"type\":\"string\"}],\"name\":\"cancelOrder\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"changeOwner\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"checkGasDue\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"claimAllGas\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_productID\",\"type\":\"string\"}],\"name\":\"confirmOrder\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_productID\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"_merchantID\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"creator\",\"type\":\"address\"}],\"name\":\"createProduct\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"gasSpent\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_productID\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"_buyerID\",\"type\":\"string\"}],\"name\":\"orderProduct\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"name\":\"orders\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"productID\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"buyerAddress\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"buyerID\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"name\":\"products\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"productID\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"wallet\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"hash\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"merchantID\",\"type\":\"string\"},{\"internalType\":\"enum Marketplace.ProductState\",\"name\":\"state\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"caller\",\"type\":\"address\"}],\"name\":\"redeemGas\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"sent\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_productID\",\"type\":\"string\"}],\"name\":\"unlistProduct\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_productID\",\"type\":\"string\"}],\"name\":\"viewOrder\",\"outputs\":[{\"components\":[{\"internalType\":\"string\",\"name\":\"productID\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"buyerAddress\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"buyerID\",\"type\":\"string\"}],\"internalType\":\"struct Marketplace.Order\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_productID\",\"type\":\"string\"}],\"name\":\"viewProduct\",\"outputs\":[{\"components\":[{\"internalType\":\"string\",\"name\":\"productID\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"wallet\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"hash\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"merchantID\",\"type\":\"string\"},{\"internalType\":\"enum Marketplace.ProductState\",\"name\":\"state\",\"type\":\"uint8\"}],\"internalType\":\"struct Marketplace.Product\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Marketplace.sol\":\"Marketplace\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/Marketplace.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\nimport {  Errors } from \\\"./utils/Errors.sol\\\";\\nimport {IBlast} from \\\"./utils/Iblast.sol\\\";\\n\\ncontract Marketplace {\\n\\n    address private owner;\\n    IBlast immutable blast = IBlast(0x4300000000000000000000000000000000000002);\\n\\n    enum ProductState { Listed, Escrowed, Confirmed, Cancelled }\\n\\n    struct Product {\\n        string productID;\\n        uint256 amount;\\n        address wallet;\\n        string hash;\\n        string merchantID;\\n        ProductState state;\\n    }\\n\\n    struct Order {\\n        string productID;\\n        uint256 amount;\\n        address buyerAddress;\\n        string buyerID;\\n        // bool paid;\\n    }\\n\\n    struct Redeem {\\n        address id;\\n        uint256 gas;\\n    }\\n\\n    mapping(string => Product) public products;\\n    mapping(string => Order) public orders;\\n    mapping(address => uint256) public gasSpent;\\n\\n    Redeem[] claims ;\\n\\n    event ProductCreated(string productID, uint256 amount, address indexed seller);\\n    // event ProductListed(string productID, uint256 amount, address seller);\\n    event ProductListed(string productID, uint256 amount);\\n    event ProductUnlisted(string productID);\\n    event OrderPlaced(string productID, uint256 amount, address buyer);\\n    event OrderConfirmed(string productID, address buyer);\\n    event GasClaimed(uint256 indexed time, uint256 indexed amount);\\n\\n   \\n\\n    // modifier onlyProductState(string memory _productID, ProductState _requiredState) {\\n    //     require(products[_productID].state == _requiredState, InvalidProductState());\\n    //     _;\\n    // }\\n\\n    //***** */ */\\n\\n    constructor(){\\n        owner = msg.sender;\\n        IBlast(0x4300000000000000000000000000000000000002).configureClaimableGas();\\n        IBlast(0x4300000000000000000000000000000000000002).configureGovernor(address(this));\\n\\n    }\\n\\n    modifier onlySeller(string memory _productID) {\\n        if (products[_productID].wallet == msg.sender){ \\n            revert Errors.WrongSignature();\\n        }\\n        _;\\n    }\\n\\n    modifier onlyBuyer(string memory _productID) {\\n        if(orders[_productID].buyerAddress == msg.sender){ \\n            revert Errors.WrongSignature();\\n        }\\n        _;\\n    }\\n\\n    modifier onlyOwner() {\\n        if(msg.sender != owner){\\n            revert Errors.NotOwner();\\n        }\\n        _;\\n    }\\n\\n\\n    function createProduct(\\n        string memory _productID, \\n        uint256 _amount,\\n        string memory _merchantID,\\n        address creator\\n    ) external onlyOwner {\\n        if(products[_productID].wallet == address(0)){ revert Errors.ProductAlreadyExists();}\\n        products[_productID] = Product(_productID, _amount, payable(creator), \\\"\\\", _merchantID, ProductState.Listed);\\n        _listProduct(_productID,\\\"\\\");\\n    }\\n\\n    function _listProduct(string memory _productID, string memory _hash) internal {\\n        //require(products[_productID].state == ProductState.Listed, InvalidProductState());\\n        products[_productID].hash = _hash;\\n        products[_productID].state = ProductState.Listed;\\n        // emit ProductListed(_productID, products[_productID].amount, msg.sender);\\n        emit ProductListed(_productID, products[_productID].amount);\\n    }\\n\\n    function unlistProduct(string memory _productID) external onlyOwner {\\n        if(products[_productID].state == ProductState.Listed){ revert Errors.InvalidProductState();}\\n        products[_productID].state = ProductState.Cancelled;\\n        emit ProductUnlisted(_productID);\\n    }\\n\\n    // function orderProduct(string memory _productID) external payable {\\n    //     require(products[_productID].state == ProductState.Escrowed, \\\"Product not available\\\");\\n    //     require(msg.value == products[_productID].amount, \\\"Incorrect amount sent\\\");\\n    //     require(!orders[_productID].paid, \\\"Order already placed\\\");\\n\\n    //     orders[_productID] = Order(_productID, msg.value, payable(msg.sender), true);\\n    //     products[_productID].seller.transfer(msg.value); // Send amount to the seller\\n    //     emit OrderPlaced(_productID, msg.value, msg.sender);\\n    // }\\n\\n    function orderProduct(\\n        string memory _productID,\\n        uint256 _amount,\\n        string memory _buyerID\\n    ) external payable {\\n        //require(products[_productID], Errors.ProductNotFound());\\n        if(products[_productID].state == ProductState.Listed) {revert Errors.InvalidProductState();}\\n        // ensure the value inputed is same as the product amount listed\\n        if(products[_productID].amount == _amount){ revert Errors.InvalidPrice();}\\n        // ensure the value sent is the amount listed\\n        if(msg.value == _amount){ revert Errors.InsufficientFunds();}\\n\\n        orders[_productID] = Order(_productID, _amount, msg.sender, _buyerID);\\n        products[_productID].state = ProductState.Escrowed;\\n        // escrow logic to hold funds until confirmed \\n        //(transfer funds from the buyer to escrow account)\\n        gasSpent[msg.sender] = tx.gasprice;\\n        emit OrderPlaced(_productID, _amount, msg.sender);\\n        uint amount = claimAllGas();\\n        emit GasClaimed(block.timestamp, amount);\\n    } \\n\\n    function confirmOrder(string memory _productID) external onlyOwner {\\n        //require(orders[_productID], Errors.OrderNotFound());\\n        if(products[_productID].state == ProductState.Escrowed) {revert Errors.InvalidProductState();}\\n        //require(orders[_productID].paid, \\\"No order placed\\\");\\n\\n        // logic to release funds in escrow account to seller\\n\\n        products[_productID].state = ProductState.Confirmed;\\n        uint256 amount = products[_productID].amount;\\n        (bool success,) = products[_productID].wallet.call{value:amount}(\\\"\\\");\\n        if (!success) {\\n            revert Errors.TransacationWasNotSuccessful();\\n        }\\n        emit OrderConfirmed(_productID, orders[_productID].buyerAddress);\\n    }\\n\\n    function cancelOrder(string memory _productID) external onlyBuyer(_productID) {\\n        //require(orders[_productID],  Errors.OrderNotFound);\\n        if(products[_productID].state == ProductState.Escrowed) {revert Errors.InvalidProductState();}\\n\\n        // ensure funds are in escrow account\\n        // require(orders[_productID].paid, \\\"No order placed\\\");\\n\\n        // Refund the buyer from escrow account\\n        payable(msg.sender).transfer(orders[_productID].amount); \\n        delete orders[_productID];\\n        products[_productID].state = ProductState.Cancelled;\\n    }\\n\\n    function changeOwner(address _owner) public onlyOwner {\\n        assembly {\\n            sstore(0x00, _owner)\\n        }\\n    }\\n\\n    function viewOrder(string memory _productID) external view returns (Order memory) {\\n        return orders[_productID];\\n    }\\n\\n    function viewProduct(string memory _productID) external view returns (Product memory) {\\n        return products[_productID];\\n    }\\n\\n    function claimAllGas() public returns(uint amount) {\\n\\t    // This function is public meaning anyone can claim the gas\\n\\t\\tamount = blast.claimAllGas(address(this), address(this));\\n\\n    }\\n    \\n    function redeemGas(address caller) external returns(bool sent) {\\n        if (gasSpent[caller] == 0 ) {\\n            revert Errors.DoNotHaveGasSpent();\\n        }\\n        claimAllGas();\\n        uint256 amountDue = gasSpent[caller];\\n        gasSpent[caller] = 0;\\n        (sent,) = caller.call{value:amountDue}(\\\"\\\");\\n        if (!sent) {\\n            revert Errors.TransacationWasNotSuccessful();\\n        }\\n\\n    }\\n\\n    function checkGasDue()external view returns (uint amount){\\n        (,amount,,) = blast.readGasParams(address(this));\\n    }\\n\\n}\\n\",\"keccak256\":\"0xce02dc7baa3982089af0371347b302f30983eda71aaf1b1d30d826abe3c7acba\",\"license\":\"MIT\"},\"contracts/utils/Errors.sol\":{\"content\":\"// SPDX-License-Identifier: SEE LICENSE IN LICENSE\\npragma solidity ^0.8.13;\\n\\n\\nlibrary Errors{\\n    error NotOwner();\\n    error TransacationWasNotSuccessful();\\n    error DepositDoesNotMatchAmount();\\n    error ProductNotFound();\\n    error ProductAlreadyExists();\\n    error OrderNotFound();\\n    error OrderAlreadyExists();\\n    error InvalidProductState();\\n    error InsufficientFunds();\\n    error InvalidPrice();\\n    // error NonceAlreadyUsed();\\n    // error WrongContract();\\n    error Expired();\\n    error WrongFunctionCall();\\n    error WrongSignature();\\n    error DoNotHaveGasSpent();\\n    \\n\\n\\n}\\n\",\"keccak256\":\"0xdcfd03efdd984ce901d78391fd5e4b2bdfc0234e9a2ce2f4ce07ef575544ce6e\",\"license\":\"SEE LICENSE IN LICENSE\"},\"contracts/utils/Iblast.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\nenum YieldMode {\\n    AUTOMATIC,\\n    VOID,\\n    CLAIMABLE\\n}\\n\\nenum GasMode {\\n    VOID,\\n    CLAIMABLE \\n}\\n\\ninterface IBlast{\\n    // configure\\n    function configureContract(address contractAddress, YieldMode _yield, GasMode gasMode, address governor) external;\\n    function configure(YieldMode _yield, GasMode gasMode, address governor) external;\\n\\n    // base configuration options\\n    function configureClaimableYield() external;\\n    function configureClaimableYieldOnBehalf(address contractAddress) external;\\n    function configureAutomaticYield() external;\\n    function configureAutomaticYieldOnBehalf(address contractAddress) external;\\n    function configureVoidYield() external;\\n    function configureVoidYieldOnBehalf(address contractAddress) external;\\n    function configureClaimableGas() external;\\n    function configureClaimableGasOnBehalf(address contractAddress) external;\\n    function configureVoidGas() external;\\n    function configureVoidGasOnBehalf(address contractAddress) external;\\n    function configureGovernor(address _governor) external;\\n    function configureGovernorOnBehalf(address _newGovernor, address contractAddress) external;\\n\\n    // claim yield\\n    function claimYield(address contractAddress, address recipientOfYield, uint256 amount) external returns (uint256);\\n    function claimAllYield(address contractAddress, address recipientOfYield) external returns (uint256);\\n\\n    // claim gas\\n    function claimAllGas(address contractAddress, address recipientOfGas) external returns (uint256);\\n    function claimGasAtMinClaimRate(address contractAddress, address recipientOfGas, uint256 minClaimRateBips) external returns (uint256);\\n    function claimMaxGas(address contractAddress, address recipientOfGas) external returns (uint256);\\n    function claimGas(address contractAddress, address recipientOfGas, uint256 gasToClaim, uint256 gasSecondsToConsume) external returns (uint256);\\n\\n    // read functions\\n    function readClaimableYield(address contractAddress) external view returns (uint256);\\n    function readYieldConfiguration(address contractAddress) external view returns (uint8);\\n    function readGasParams(address contractAddress) external view returns (uint256 etherSeconds, uint256 etherBalance, uint256 lastUpdated, GasMode);\\n}\\n\",\"keccak256\":\"0x48dd711b071147edcd39e33633141074f0b4348316a15f7f897c7b7a81542c46\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x60a060405273430000000000000000000000000000000000000273ffffffffffffffffffffffffffffffffffffffff1660809073ffffffffffffffffffffffffffffffffffffffff168152503480156200005857600080fd5b50336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555073430000000000000000000000000000000000000273ffffffffffffffffffffffffffffffffffffffff16634e606c476040518163ffffffff1660e01b8152600401600060405180830381600087803b158015620000f657600080fd5b505af11580156200010b573d6000803e3d6000fd5b5050505073430000000000000000000000000000000000000273ffffffffffffffffffffffffffffffffffffffff1663eb864698306040518263ffffffff1660e01b81526004016200015e9190620001dd565b600060405180830381600087803b1580156200017957600080fd5b505af11580156200018e573d6000803e3d6000fd5b50505050620001fa565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000620001c58262000198565b9050919050565b620001d781620001b8565b82525050565b6000602082019050620001f46000830184620001cc565b92915050565b608051612a396200021d6000396000818161105101526119100152612a396000f3fe6080604052600436106100dd5760003560e01c80639331be6a1161007f578063c2558ffd11610059578063c2558ffd146102dd578063d4de711c14610306578063e32c9b971461032f578063f7eff0ab1461035a576100dd565b80639331be6a1461023a578063a6f9dae114610277578063ab4d675e146102a0576100dd565b806334e750ee116100bb57806334e750ee146101a15780633ace041a146101bd5780633fa68be6146101e6578063645dd1fa1461020f576100dd565b80630186a423146100e25780631a9489471461012457806330c1642214610164575b600080fd5b3480156100ee57600080fd5b5061010960048036038101906101049190611e9c565b610397565b60405161011b96959493929190612035565b60405180910390f35b34801561013057600080fd5b5061014b60048036038101906101469190611e9c565b6105ae565b60405161015b94939291906120ab565b60405180910390f35b34801561017057600080fd5b5061018b6004803603810190610186919061212a565b610724565b6040516101989190612172565b60405180910390f35b6101bb60048036038101906101b691906121b9565b6108d9565b005b3480156101c957600080fd5b506101e460048036038101906101df9190611e9c565b610bd4565b005b3480156101f257600080fd5b5061020d60048036038101906102089190611e9c565b610eb8565b005b34801561021b57600080fd5b5061022461104d565b6040516102319190612244565b60405180910390f35b34801561024657600080fd5b50610261600480360381019061025c919061212a565b6110f2565b60405161026e9190612244565b60405180910390f35b34801561028357600080fd5b5061029e6004803603810190610299919061212a565b61110a565b005b3480156102ac57600080fd5b506102c760048036038101906102c29190611e9c565b611196565b6040516102d4919061236d565b60405180910390f35b3480156102e957600080fd5b5061030460048036038101906102ff9190611e9c565b61141f565b005b34801561031257600080fd5b5061032d6004803603810190610328919061238f565b611678565b005b34801561033b57600080fd5b5061034461190c565b6040516103519190612244565b60405180910390f35b34801561036657600080fd5b50610381600480360381019061037c9190611e9c565b6119b6565b60405161038e9190612498565b60405180910390f35b6001818051602081018201805184825260208301602085012081835280955050505050506000915090508060000180546103d0906124e9565b80601f01602080910402602001604051908101604052809291908181526020018280546103fc906124e9565b80156104495780601f1061041e57610100808354040283529160200191610449565b820191906000526020600020905b81548152906001019060200180831161042c57829003601f168201915b5050505050908060010154908060020160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169080600301805461048a906124e9565b80601f01602080910402602001604051908101604052809291908181526020018280546104b6906124e9565b80156105035780601f106104d857610100808354040283529160200191610503565b820191906000526020600020905b8154815290600101906020018083116104e657829003601f168201915b505050505090806004018054610518906124e9565b80601f0160208091040260200160405190810160405280929190818152602001828054610544906124e9565b80156105915780601f1061056657610100808354040283529160200191610591565b820191906000526020600020905b81548152906001019060200180831161057457829003601f168201915b5050505050908060050160009054906101000a900460ff16905086565b6002818051602081018201805184825260208301602085012081835280955050505050506000915090508060000180546105e7906124e9565b80601f0160208091040260200160405190810160405280929190818152602001828054610613906124e9565b80156106605780601f1061063557610100808354040283529160200191610660565b820191906000526020600020905b81548152906001019060200180831161064357829003601f168201915b5050505050908060010154908060020160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060030180546106a1906124e9565b80601f01602080910402602001604051908101604052809291908181526020018280546106cd906124e9565b801561071a5780601f106106ef5761010080835404028352916020019161071a565b820191906000526020600020905b8154815290600101906020018083116106fd57829003601f168201915b5050505050905084565b600080600360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020540361079e576040517fadeea22c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6107a661104d565b506000600360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205490506000600360008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508273ffffffffffffffffffffffffffffffffffffffff16816040516108549061254b565b60006040518083038185875af1925050503d8060008114610891576040519150601f19603f3d011682016040523d82523d6000602084013e610896565b606091505b505080925050816108d3576040517f1854c3ab00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b50919050565b600060038111156108ed576108ec611fbe565b5b6001846040516108fd919061259c565b908152602001604051809103902060050160009054906101000a900460ff16600381111561092e5761092d611fbe565b5b03610965576040517f9a66ef8d00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b81600184604051610976919061259c565b908152602001604051809103902060010154036109be576040517ebfc92100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8134036109f7576040517f356680b700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60405180608001604052808481526020018381526020013373ffffffffffffffffffffffffffffffffffffffff16815260200182815250600284604051610a3e919061259c565b90815260200160405180910390206000820151816000019081610a61919061275f565b506020820151816001015560408201518160020160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506060820151816003019081610ac8919061275f565b5090505060018084604051610add919061259c565b908152602001604051809103902060050160006101000a81548160ff02191690836003811115610b1057610b0f611fbe565b5b02179055503a600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055507f6c6eb701c60c9470109290f5c0b690fd029bf7b24d2005525f84d2338360c9b2838333604051610b8c93929190612831565b60405180910390a16000610b9e61104d565b905080427fd52e35f4f279be24b2b7d68e02535f0e1b775658f223700cda44dda590de419660405160405180910390a350505050565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610c59576040517f30cd747100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60016003811115610c6d57610c6c611fbe565b5b600182604051610c7d919061259c565b908152602001604051809103902060050160009054906101000a900460ff166003811115610cae57610cad611fbe565b5b03610ce5576040517f9a66ef8d00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6002600182604051610cf7919061259c565b908152602001604051809103902060050160006101000a81548160ff02191690836003811115610d2a57610d29611fbe565b5b02179055506000600182604051610d41919061259c565b90815260200160405180910390206001015490506000600183604051610d67919061259c565b908152602001604051809103902060020160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1682604051610dbc9061254b565b60006040518083038185875af1925050503d8060008114610df9576040519150601f19603f3d011682016040523d82523d6000602084013e610dfe565b606091505b5050905080610e39576040517f1854c3ab00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b7fac24ed9211b4d75276b27d7f679ed153d99e277825f8d0685762e4046ba383d083600285604051610e6b919061259c565b908152602001604051809103902060020160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16604051610eab92919061286f565b60405180910390a1505050565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610f3d576040517f30cd747100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60006003811115610f5157610f50611fbe565b5b600182604051610f61919061259c565b908152602001604051809103902060050160009054906101000a900460ff166003811115610f9257610f91611fbe565b5b03610fc9576040517f9a66ef8d00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6003600182604051610fdb919061259c565b908152602001604051809103902060050160006101000a81548160ff0219169083600381111561100e5761100d611fbe565b5b02179055507f4037d859ce7adc3359e3310038adf1e2f91ec4b8bcede565b11562ab9ad026d781604051611042919061289f565b60405180910390a150565b60007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663954fa5ee30306040518363ffffffff1660e01b81526004016110aa9291906128c1565b6020604051808303816000875af11580156110c9573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906110ed91906128ff565b905090565b60036020528060005260406000206000915090505481565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461118f576040517f30cd747100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8060005550565b61119e611c49565b6001826040516111ae919061259c565b90815260200160405180910390206040518060c00160405290816000820180546111d7906124e9565b80601f0160208091040260200160405190810160405280929190818152602001828054611203906124e9565b80156112505780601f1061122557610100808354040283529160200191611250565b820191906000526020600020905b81548152906001019060200180831161123357829003601f168201915b50505050508152602001600182015481526020016002820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016003820180546112c9906124e9565b80601f01602080910402602001604051908101604052809291908181526020018280546112f5906124e9565b80156113425780601f1061131757610100808354040283529160200191611342565b820191906000526020600020905b81548152906001019060200180831161132557829003601f168201915b5050505050815260200160048201805461135b906124e9565b80601f0160208091040260200160405190810160405280929190818152602001828054611387906124e9565b80156113d45780601f106113a9576101008083540402835291602001916113d4565b820191906000526020600020905b8154815290600101906020018083116113b757829003601f168201915b505050505081526020016005820160009054906101000a900460ff16600381111561140257611401611fbe565b5b600381111561141457611413611fbe565b5b815250509050919050565b803373ffffffffffffffffffffffffffffffffffffffff16600282604051611447919061259c565b908152602001604051809103902060020160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16036114c6576040517f356a441800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600160038111156114da576114d9611fbe565b5b6001836040516114ea919061259c565b908152602001604051809103902060050160009054906101000a900460ff16600381111561151b5761151a611fbe565b5b03611552576040517f9a66ef8d00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b3373ffffffffffffffffffffffffffffffffffffffff166108fc60028460405161157c919061259c565b9081526020016040518091039020600101549081150290604051600060405180830381858888f193505050501580156115b9573d6000803e3d6000fd5b506002826040516115ca919061259c565b9081526020016040518091039020600080820160006115e99190611ca7565b60018201600090556002820160006101000a81549073ffffffffffffffffffffffffffffffffffffffff02191690556003820160006116289190611ca7565b5050600360018360405161163c919061259c565b908152602001604051809103902060050160006101000a81548160ff0219169083600381111561166f5761166e611fbe565b5b02179055505050565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146116fd576040517f30cd747100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff16600185604051611725919061259c565b908152602001604051809103902060020160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16036117a4576040517f7afeb2e100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6040518060c001604052808581526020018481526020018273ffffffffffffffffffffffffffffffffffffffff1681526020016040518060200160405280600081525081526020018381526020016000600381111561180657611805611fbe565b5b815250600185604051611819919061259c565b9081526020016040518091039020600082015181600001908161183c919061275f565b506020820151816001015560408201518160020160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060608201518160030190816118a3919061275f565b5060808201518160040190816118b9919061275f565b5060a08201518160050160006101000a81548160ff021916908360038111156118e5576118e4611fbe565b5b02179055509050506119068460405180602001604052806000815250611b72565b50505050565b60007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663dde798a4306040518263ffffffff1660e01b8152600401611967919061292c565b608060405180830381865afa158015611984573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906119a8919061296c565b909192509050508091505090565b6119be611ce7565b6002826040516119ce919061259c565b90815260200160405180910390206040518060800160405290816000820180546119f7906124e9565b80601f0160208091040260200160405190810160405280929190818152602001828054611a23906124e9565b8015611a705780601f10611a4557610100808354040283529160200191611a70565b820191906000526020600020905b815481529060010190602001808311611a5357829003601f168201915b50505050508152602001600182015481526020016002820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001600382018054611ae9906124e9565b80601f0160208091040260200160405190810160405280929190818152602001828054611b15906124e9565b8015611b625780601f10611b3757610100808354040283529160200191611b62565b820191906000526020600020905b815481529060010190602001808311611b4557829003601f168201915b5050505050815250509050919050565b80600183604051611b83919061259c565b90815260200160405180910390206003019081611ba0919061275f565b506000600183604051611bb3919061259c565b908152602001604051809103902060050160006101000a81548160ff02191690836003811115611be657611be5611fbe565b5b02179055507f666b1db289eab7696684d0308b6790d665fab3e8d4400c18f08d1a0d9408133782600184604051611c1d919061259c565b908152602001604051809103902060010154604051611c3d9291906129d3565b60405180910390a15050565b6040518060c001604052806060815260200160008152602001600073ffffffffffffffffffffffffffffffffffffffff168152602001606081526020016060815260200160006003811115611ca157611ca0611fbe565b5b81525090565b508054611cb3906124e9565b6000825580601f10611cc55750611ce4565b601f016020900490600052602060002090810190611ce39190611d25565b5b50565b60405180608001604052806060815260200160008152602001600073ffffffffffffffffffffffffffffffffffffffff168152602001606081525090565b5b80821115611d3e576000816000905550600101611d26565b5090565b6000604051905090565b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b611da982611d60565b810181811067ffffffffffffffff82111715611dc857611dc7611d71565b5b80604052505050565b6000611ddb611d42565b9050611de78282611da0565b919050565b600067ffffffffffffffff821115611e0757611e06611d71565b5b611e1082611d60565b9050602081019050919050565b82818337600083830152505050565b6000611e3f611e3a84611dec565b611dd1565b905082815260208101848484011115611e5b57611e5a611d5b565b5b611e66848285611e1d565b509392505050565b600082601f830112611e8357611e82611d56565b5b8135611e93848260208601611e2c565b91505092915050565b600060208284031215611eb257611eb1611d4c565b5b600082013567ffffffffffffffff811115611ed057611ecf611d51565b5b611edc84828501611e6e565b91505092915050565b600081519050919050565b600082825260208201905092915050565b60005b83811015611f1f578082015181840152602081019050611f04565b60008484015250505050565b6000611f3682611ee5565b611f408185611ef0565b9350611f50818560208601611f01565b611f5981611d60565b840191505092915050565b6000819050919050565b611f7781611f64565b82525050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000611fa882611f7d565b9050919050565b611fb881611f9d565b82525050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b60048110611ffe57611ffd611fbe565b5b50565b600081905061200f82611fed565b919050565b600061201f82612001565b9050919050565b61202f81612014565b82525050565b600060c082019050818103600083015261204f8189611f2b565b905061205e6020830188611f6e565b61206b6040830187611faf565b818103606083015261207d8186611f2b565b905081810360808301526120918185611f2b565b90506120a060a0830184612026565b979650505050505050565b600060808201905081810360008301526120c58187611f2b565b90506120d46020830186611f6e565b6120e16040830185611faf565b81810360608301526120f38184611f2b565b905095945050505050565b61210781611f9d565b811461211257600080fd5b50565b600081359050612124816120fe565b92915050565b6000602082840312156121405761213f611d4c565b5b600061214e84828501612115565b91505092915050565b60008115159050919050565b61216c81612157565b82525050565b60006020820190506121876000830184612163565b92915050565b61219681611f64565b81146121a157600080fd5b50565b6000813590506121b38161218d565b92915050565b6000806000606084860312156121d2576121d1611d4c565b5b600084013567ffffffffffffffff8111156121f0576121ef611d51565b5b6121fc86828701611e6e565b935050602061220d868287016121a4565b925050604084013567ffffffffffffffff81111561222e5761222d611d51565b5b61223a86828701611e6e565b9150509250925092565b60006020820190506122596000830184611f6e565b92915050565b600082825260208201905092915050565b600061227b82611ee5565b612285818561225f565b9350612295818560208601611f01565b61229e81611d60565b840191505092915050565b6122b281611f64565b82525050565b6122c181611f9d565b82525050565b6122d081612014565b82525050565b600060c08301600083015184820360008601526122f38282612270565b915050602083015161230860208601826122a9565b50604083015161231b60408601826122b8565b50606083015184820360608601526123338282612270565b9150506080830151848203608086015261234d8282612270565b91505060a083015161236260a08601826122c7565b508091505092915050565b6000602082019050818103600083015261238781846122d6565b905092915050565b600080600080608085870312156123a9576123a8611d4c565b5b600085013567ffffffffffffffff8111156123c7576123c6611d51565b5b6123d387828801611e6e565b94505060206123e4878288016121a4565b935050604085013567ffffffffffffffff81111561240557612404611d51565b5b61241187828801611e6e565b925050606061242287828801612115565b91505092959194509250565b6000608083016000830151848203600086015261244b8282612270565b915050602083015161246060208601826122a9565b50604083015161247360408601826122b8565b506060830151848203606086015261248b8282612270565b9150508091505092915050565b600060208201905081810360008301526124b2818461242e565b905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6000600282049050600182168061250157607f821691505b602082108103612514576125136124ba565b5b50919050565b600081905092915050565b50565b600061253560008361251a565b915061254082612525565b600082019050919050565b600061255682612528565b9150819050919050565b600081905092915050565b600061257682611ee5565b6125808185612560565b9350612590818560208601611f01565b80840191505092915050565b60006125a8828461256b565b915081905092915050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b6000600883026126157fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff826125d8565b61261f86836125d8565b95508019841693508086168417925050509392505050565b6000819050919050565b600061265c61265761265284611f64565b612637565b611f64565b9050919050565b6000819050919050565b61267683612641565b61268a61268282612663565b8484546125e5565b825550505050565b600090565b61269f612692565b6126aa81848461266d565b505050565b5b818110156126ce576126c3600082612697565b6001810190506126b0565b5050565b601f821115612713576126e4816125b3565b6126ed846125c8565b810160208510156126fc578190505b612710612708856125c8565b8301826126af565b50505b505050565b600082821c905092915050565b600061273660001984600802612718565b1980831691505092915050565b600061274f8383612725565b9150826002028217905092915050565b61276882611ee5565b67ffffffffffffffff81111561278157612780611d71565b5b61278b82546124e9565b6127968282856126d2565b600060209050601f8311600181146127c957600084156127b7578287015190505b6127c18582612743565b865550612829565b601f1984166127d7866125b3565b60005b828110156127ff578489015182556001820191506020850194506020810190506127da565b8683101561281c5784890151612818601f891682612725565b8355505b6001600288020188555050505b505050505050565b6000606082019050818103600083015261284b8186611f2b565b905061285a6020830185611f6e565b6128676040830184611faf565b949350505050565b600060408201905081810360008301526128898185611f2b565b90506128986020830184611faf565b9392505050565b600060208201905081810360008301526128b98184611f2b565b905092915050565b60006040820190506128d66000830185611faf565b6128e36020830184611faf565b9392505050565b6000815190506128f98161218d565b92915050565b60006020828403121561291557612914611d4c565b5b6000612923848285016128ea565b91505092915050565b60006020820190506129416000830184611faf565b92915050565b6002811061295457600080fd5b50565b60008151905061296681612947565b92915050565b6000806000806080858703121561298657612985611d4c565b5b6000612994878288016128ea565b94505060206129a5878288016128ea565b93505060406129b6878288016128ea565b92505060606129c787828801612957565b91505092959194509250565b600060408201905081810360008301526129ed8185611f2b565b90506129fc6020830184611f6e565b939250505056fea26469706673582212200d14d03e107a1e63c97098ea5f036ab528f5f31bfa25e58827144d6a506dc3de64736f6c63430008110033",
  "deployedBytecode": "0x6080604052600436106100dd5760003560e01c80639331be6a1161007f578063c2558ffd11610059578063c2558ffd146102dd578063d4de711c14610306578063e32c9b971461032f578063f7eff0ab1461035a576100dd565b80639331be6a1461023a578063a6f9dae114610277578063ab4d675e146102a0576100dd565b806334e750ee116100bb57806334e750ee146101a15780633ace041a146101bd5780633fa68be6146101e6578063645dd1fa1461020f576100dd565b80630186a423146100e25780631a9489471461012457806330c1642214610164575b600080fd5b3480156100ee57600080fd5b5061010960048036038101906101049190611e9c565b610397565b60405161011b96959493929190612035565b60405180910390f35b34801561013057600080fd5b5061014b60048036038101906101469190611e9c565b6105ae565b60405161015b94939291906120ab565b60405180910390f35b34801561017057600080fd5b5061018b6004803603810190610186919061212a565b610724565b6040516101989190612172565b60405180910390f35b6101bb60048036038101906101b691906121b9565b6108d9565b005b3480156101c957600080fd5b506101e460048036038101906101df9190611e9c565b610bd4565b005b3480156101f257600080fd5b5061020d60048036038101906102089190611e9c565b610eb8565b005b34801561021b57600080fd5b5061022461104d565b6040516102319190612244565b60405180910390f35b34801561024657600080fd5b50610261600480360381019061025c919061212a565b6110f2565b60405161026e9190612244565b60405180910390f35b34801561028357600080fd5b5061029e6004803603810190610299919061212a565b61110a565b005b3480156102ac57600080fd5b506102c760048036038101906102c29190611e9c565b611196565b6040516102d4919061236d565b60405180910390f35b3480156102e957600080fd5b5061030460048036038101906102ff9190611e9c565b61141f565b005b34801561031257600080fd5b5061032d6004803603810190610328919061238f565b611678565b005b34801561033b57600080fd5b5061034461190c565b6040516103519190612244565b60405180910390f35b34801561036657600080fd5b50610381600480360381019061037c9190611e9c565b6119b6565b60405161038e9190612498565b60405180910390f35b6001818051602081018201805184825260208301602085012081835280955050505050506000915090508060000180546103d0906124e9565b80601f01602080910402602001604051908101604052809291908181526020018280546103fc906124e9565b80156104495780601f1061041e57610100808354040283529160200191610449565b820191906000526020600020905b81548152906001019060200180831161042c57829003601f168201915b5050505050908060010154908060020160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169080600301805461048a906124e9565b80601f01602080910402602001604051908101604052809291908181526020018280546104b6906124e9565b80156105035780601f106104d857610100808354040283529160200191610503565b820191906000526020600020905b8154815290600101906020018083116104e657829003601f168201915b505050505090806004018054610518906124e9565b80601f0160208091040260200160405190810160405280929190818152602001828054610544906124e9565b80156105915780601f1061056657610100808354040283529160200191610591565b820191906000526020600020905b81548152906001019060200180831161057457829003601f168201915b5050505050908060050160009054906101000a900460ff16905086565b6002818051602081018201805184825260208301602085012081835280955050505050506000915090508060000180546105e7906124e9565b80601f0160208091040260200160405190810160405280929190818152602001828054610613906124e9565b80156106605780601f1061063557610100808354040283529160200191610660565b820191906000526020600020905b81548152906001019060200180831161064357829003601f168201915b5050505050908060010154908060020160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060030180546106a1906124e9565b80601f01602080910402602001604051908101604052809291908181526020018280546106cd906124e9565b801561071a5780601f106106ef5761010080835404028352916020019161071a565b820191906000526020600020905b8154815290600101906020018083116106fd57829003601f168201915b5050505050905084565b600080600360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020540361079e576040517fadeea22c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6107a661104d565b506000600360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205490506000600360008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508273ffffffffffffffffffffffffffffffffffffffff16816040516108549061254b565b60006040518083038185875af1925050503d8060008114610891576040519150601f19603f3d011682016040523d82523d6000602084013e610896565b606091505b505080925050816108d3576040517f1854c3ab00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b50919050565b600060038111156108ed576108ec611fbe565b5b6001846040516108fd919061259c565b908152602001604051809103902060050160009054906101000a900460ff16600381111561092e5761092d611fbe565b5b03610965576040517f9a66ef8d00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b81600184604051610976919061259c565b908152602001604051809103902060010154036109be576040517ebfc92100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8134036109f7576040517f356680b700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60405180608001604052808481526020018381526020013373ffffffffffffffffffffffffffffffffffffffff16815260200182815250600284604051610a3e919061259c565b90815260200160405180910390206000820151816000019081610a61919061275f565b506020820151816001015560408201518160020160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506060820151816003019081610ac8919061275f565b5090505060018084604051610add919061259c565b908152602001604051809103902060050160006101000a81548160ff02191690836003811115610b1057610b0f611fbe565b5b02179055503a600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055507f6c6eb701c60c9470109290f5c0b690fd029bf7b24d2005525f84d2338360c9b2838333604051610b8c93929190612831565b60405180910390a16000610b9e61104d565b905080427fd52e35f4f279be24b2b7d68e02535f0e1b775658f223700cda44dda590de419660405160405180910390a350505050565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610c59576040517f30cd747100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60016003811115610c6d57610c6c611fbe565b5b600182604051610c7d919061259c565b908152602001604051809103902060050160009054906101000a900460ff166003811115610cae57610cad611fbe565b5b03610ce5576040517f9a66ef8d00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6002600182604051610cf7919061259c565b908152602001604051809103902060050160006101000a81548160ff02191690836003811115610d2a57610d29611fbe565b5b02179055506000600182604051610d41919061259c565b90815260200160405180910390206001015490506000600183604051610d67919061259c565b908152602001604051809103902060020160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1682604051610dbc9061254b565b60006040518083038185875af1925050503d8060008114610df9576040519150601f19603f3d011682016040523d82523d6000602084013e610dfe565b606091505b5050905080610e39576040517f1854c3ab00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b7fac24ed9211b4d75276b27d7f679ed153d99e277825f8d0685762e4046ba383d083600285604051610e6b919061259c565b908152602001604051809103902060020160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16604051610eab92919061286f565b60405180910390a1505050565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610f3d576040517f30cd747100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60006003811115610f5157610f50611fbe565b5b600182604051610f61919061259c565b908152602001604051809103902060050160009054906101000a900460ff166003811115610f9257610f91611fbe565b5b03610fc9576040517f9a66ef8d00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6003600182604051610fdb919061259c565b908152602001604051809103902060050160006101000a81548160ff0219169083600381111561100e5761100d611fbe565b5b02179055507f4037d859ce7adc3359e3310038adf1e2f91ec4b8bcede565b11562ab9ad026d781604051611042919061289f565b60405180910390a150565b60007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663954fa5ee30306040518363ffffffff1660e01b81526004016110aa9291906128c1565b6020604051808303816000875af11580156110c9573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906110ed91906128ff565b905090565b60036020528060005260406000206000915090505481565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461118f576040517f30cd747100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8060005550565b61119e611c49565b6001826040516111ae919061259c565b90815260200160405180910390206040518060c00160405290816000820180546111d7906124e9565b80601f0160208091040260200160405190810160405280929190818152602001828054611203906124e9565b80156112505780601f1061122557610100808354040283529160200191611250565b820191906000526020600020905b81548152906001019060200180831161123357829003601f168201915b50505050508152602001600182015481526020016002820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016003820180546112c9906124e9565b80601f01602080910402602001604051908101604052809291908181526020018280546112f5906124e9565b80156113425780601f1061131757610100808354040283529160200191611342565b820191906000526020600020905b81548152906001019060200180831161132557829003601f168201915b5050505050815260200160048201805461135b906124e9565b80601f0160208091040260200160405190810160405280929190818152602001828054611387906124e9565b80156113d45780601f106113a9576101008083540402835291602001916113d4565b820191906000526020600020905b8154815290600101906020018083116113b757829003601f168201915b505050505081526020016005820160009054906101000a900460ff16600381111561140257611401611fbe565b5b600381111561141457611413611fbe565b5b815250509050919050565b803373ffffffffffffffffffffffffffffffffffffffff16600282604051611447919061259c565b908152602001604051809103902060020160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16036114c6576040517f356a441800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600160038111156114da576114d9611fbe565b5b6001836040516114ea919061259c565b908152602001604051809103902060050160009054906101000a900460ff16600381111561151b5761151a611fbe565b5b03611552576040517f9a66ef8d00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b3373ffffffffffffffffffffffffffffffffffffffff166108fc60028460405161157c919061259c565b9081526020016040518091039020600101549081150290604051600060405180830381858888f193505050501580156115b9573d6000803e3d6000fd5b506002826040516115ca919061259c565b9081526020016040518091039020600080820160006115e99190611ca7565b60018201600090556002820160006101000a81549073ffffffffffffffffffffffffffffffffffffffff02191690556003820160006116289190611ca7565b5050600360018360405161163c919061259c565b908152602001604051809103902060050160006101000a81548160ff0219169083600381111561166f5761166e611fbe565b5b02179055505050565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146116fd576040517f30cd747100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff16600185604051611725919061259c565b908152602001604051809103902060020160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16036117a4576040517f7afeb2e100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6040518060c001604052808581526020018481526020018273ffffffffffffffffffffffffffffffffffffffff1681526020016040518060200160405280600081525081526020018381526020016000600381111561180657611805611fbe565b5b815250600185604051611819919061259c565b9081526020016040518091039020600082015181600001908161183c919061275f565b506020820151816001015560408201518160020160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060608201518160030190816118a3919061275f565b5060808201518160040190816118b9919061275f565b5060a08201518160050160006101000a81548160ff021916908360038111156118e5576118e4611fbe565b5b02179055509050506119068460405180602001604052806000815250611b72565b50505050565b60007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663dde798a4306040518263ffffffff1660e01b8152600401611967919061292c565b608060405180830381865afa158015611984573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906119a8919061296c565b909192509050508091505090565b6119be611ce7565b6002826040516119ce919061259c565b90815260200160405180910390206040518060800160405290816000820180546119f7906124e9565b80601f0160208091040260200160405190810160405280929190818152602001828054611a23906124e9565b8015611a705780601f10611a4557610100808354040283529160200191611a70565b820191906000526020600020905b815481529060010190602001808311611a5357829003601f168201915b50505050508152602001600182015481526020016002820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001600382018054611ae9906124e9565b80601f0160208091040260200160405190810160405280929190818152602001828054611b15906124e9565b8015611b625780601f10611b3757610100808354040283529160200191611b62565b820191906000526020600020905b815481529060010190602001808311611b4557829003601f168201915b5050505050815250509050919050565b80600183604051611b83919061259c565b90815260200160405180910390206003019081611ba0919061275f565b506000600183604051611bb3919061259c565b908152602001604051809103902060050160006101000a81548160ff02191690836003811115611be657611be5611fbe565b5b02179055507f666b1db289eab7696684d0308b6790d665fab3e8d4400c18f08d1a0d9408133782600184604051611c1d919061259c565b908152602001604051809103902060010154604051611c3d9291906129d3565b60405180910390a15050565b6040518060c001604052806060815260200160008152602001600073ffffffffffffffffffffffffffffffffffffffff168152602001606081526020016060815260200160006003811115611ca157611ca0611fbe565b5b81525090565b508054611cb3906124e9565b6000825580601f10611cc55750611ce4565b601f016020900490600052602060002090810190611ce39190611d25565b5b50565b60405180608001604052806060815260200160008152602001600073ffffffffffffffffffffffffffffffffffffffff168152602001606081525090565b5b80821115611d3e576000816000905550600101611d26565b5090565b6000604051905090565b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b611da982611d60565b810181811067ffffffffffffffff82111715611dc857611dc7611d71565b5b80604052505050565b6000611ddb611d42565b9050611de78282611da0565b919050565b600067ffffffffffffffff821115611e0757611e06611d71565b5b611e1082611d60565b9050602081019050919050565b82818337600083830152505050565b6000611e3f611e3a84611dec565b611dd1565b905082815260208101848484011115611e5b57611e5a611d5b565b5b611e66848285611e1d565b509392505050565b600082601f830112611e8357611e82611d56565b5b8135611e93848260208601611e2c565b91505092915050565b600060208284031215611eb257611eb1611d4c565b5b600082013567ffffffffffffffff811115611ed057611ecf611d51565b5b611edc84828501611e6e565b91505092915050565b600081519050919050565b600082825260208201905092915050565b60005b83811015611f1f578082015181840152602081019050611f04565b60008484015250505050565b6000611f3682611ee5565b611f408185611ef0565b9350611f50818560208601611f01565b611f5981611d60565b840191505092915050565b6000819050919050565b611f7781611f64565b82525050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000611fa882611f7d565b9050919050565b611fb881611f9d565b82525050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b60048110611ffe57611ffd611fbe565b5b50565b600081905061200f82611fed565b919050565b600061201f82612001565b9050919050565b61202f81612014565b82525050565b600060c082019050818103600083015261204f8189611f2b565b905061205e6020830188611f6e565b61206b6040830187611faf565b818103606083015261207d8186611f2b565b905081810360808301526120918185611f2b565b90506120a060a0830184612026565b979650505050505050565b600060808201905081810360008301526120c58187611f2b565b90506120d46020830186611f6e565b6120e16040830185611faf565b81810360608301526120f38184611f2b565b905095945050505050565b61210781611f9d565b811461211257600080fd5b50565b600081359050612124816120fe565b92915050565b6000602082840312156121405761213f611d4c565b5b600061214e84828501612115565b91505092915050565b60008115159050919050565b61216c81612157565b82525050565b60006020820190506121876000830184612163565b92915050565b61219681611f64565b81146121a157600080fd5b50565b6000813590506121b38161218d565b92915050565b6000806000606084860312156121d2576121d1611d4c565b5b600084013567ffffffffffffffff8111156121f0576121ef611d51565b5b6121fc86828701611e6e565b935050602061220d868287016121a4565b925050604084013567ffffffffffffffff81111561222e5761222d611d51565b5b61223a86828701611e6e565b9150509250925092565b60006020820190506122596000830184611f6e565b92915050565b600082825260208201905092915050565b600061227b82611ee5565b612285818561225f565b9350612295818560208601611f01565b61229e81611d60565b840191505092915050565b6122b281611f64565b82525050565b6122c181611f9d565b82525050565b6122d081612014565b82525050565b600060c08301600083015184820360008601526122f38282612270565b915050602083015161230860208601826122a9565b50604083015161231b60408601826122b8565b50606083015184820360608601526123338282612270565b9150506080830151848203608086015261234d8282612270565b91505060a083015161236260a08601826122c7565b508091505092915050565b6000602082019050818103600083015261238781846122d6565b905092915050565b600080600080608085870312156123a9576123a8611d4c565b5b600085013567ffffffffffffffff8111156123c7576123c6611d51565b5b6123d387828801611e6e565b94505060206123e4878288016121a4565b935050604085013567ffffffffffffffff81111561240557612404611d51565b5b61241187828801611e6e565b925050606061242287828801612115565b91505092959194509250565b6000608083016000830151848203600086015261244b8282612270565b915050602083015161246060208601826122a9565b50604083015161247360408601826122b8565b506060830151848203606086015261248b8282612270565b9150508091505092915050565b600060208201905081810360008301526124b2818461242e565b905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6000600282049050600182168061250157607f821691505b602082108103612514576125136124ba565b5b50919050565b600081905092915050565b50565b600061253560008361251a565b915061254082612525565b600082019050919050565b600061255682612528565b9150819050919050565b600081905092915050565b600061257682611ee5565b6125808185612560565b9350612590818560208601611f01565b80840191505092915050565b60006125a8828461256b565b915081905092915050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b6000600883026126157fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff826125d8565b61261f86836125d8565b95508019841693508086168417925050509392505050565b6000819050919050565b600061265c61265761265284611f64565b612637565b611f64565b9050919050565b6000819050919050565b61267683612641565b61268a61268282612663565b8484546125e5565b825550505050565b600090565b61269f612692565b6126aa81848461266d565b505050565b5b818110156126ce576126c3600082612697565b6001810190506126b0565b5050565b601f821115612713576126e4816125b3565b6126ed846125c8565b810160208510156126fc578190505b612710612708856125c8565b8301826126af565b50505b505050565b600082821c905092915050565b600061273660001984600802612718565b1980831691505092915050565b600061274f8383612725565b9150826002028217905092915050565b61276882611ee5565b67ffffffffffffffff81111561278157612780611d71565b5b61278b82546124e9565b6127968282856126d2565b600060209050601f8311600181146127c957600084156127b7578287015190505b6127c18582612743565b865550612829565b601f1984166127d7866125b3565b60005b828110156127ff578489015182556001820191506020850194506020810190506127da565b8683101561281c5784890151612818601f891682612725565b8355505b6001600288020188555050505b505050505050565b6000606082019050818103600083015261284b8186611f2b565b905061285a6020830185611f6e565b6128676040830184611faf565b949350505050565b600060408201905081810360008301526128898185611f2b565b90506128986020830184611faf565b9392505050565b600060208201905081810360008301526128b98184611f2b565b905092915050565b60006040820190506128d66000830185611faf565b6128e36020830184611faf565b9392505050565b6000815190506128f98161218d565b92915050565b60006020828403121561291557612914611d4c565b5b6000612923848285016128ea565b91505092915050565b60006020820190506129416000830184611faf565b92915050565b6002811061295457600080fd5b50565b60008151905061296681612947565b92915050565b6000806000806080858703121561298657612985611d4c565b5b6000612994878288016128ea565b94505060206129a5878288016128ea565b93505060406129b6878288016128ea565b92505060606129c787828801612957565b91505092959194509250565b600060408201905081810360008301526129ed8185611f2b565b90506129fc6020830184611f6e565b939250505056fea26469706673582212200d14d03e107a1e63c97098ea5f036ab528f5f31bfa25e58827144d6a506dc3de64736f6c63430008110033",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 1201,
        "contract": "contracts/Marketplace.sol:Marketplace",
        "label": "owner",
        "offset": 0,
        "slot": "0",
        "type": "t_address"
      },
      {
        "astId": 1245,
        "contract": "contracts/Marketplace.sol:Marketplace",
        "label": "products",
        "offset": 0,
        "slot": "1",
        "type": "t_mapping(t_string_memory_ptr,t_struct(Product)1226_storage)"
      },
      {
        "astId": 1250,
        "contract": "contracts/Marketplace.sol:Marketplace",
        "label": "orders",
        "offset": 0,
        "slot": "2",
        "type": "t_mapping(t_string_memory_ptr,t_struct(Order)1235_storage)"
      },
      {
        "astId": 1254,
        "contract": "contracts/Marketplace.sol:Marketplace",
        "label": "gasSpent",
        "offset": 0,
        "slot": "3",
        "type": "t_mapping(t_address,t_uint256)"
      },
      {
        "astId": 1258,
        "contract": "contracts/Marketplace.sol:Marketplace",
        "label": "claims",
        "offset": 0,
        "slot": "4",
        "type": "t_array(t_struct(Redeem)1240_storage)dyn_storage"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_struct(Redeem)1240_storage)dyn_storage": {
        "base": "t_struct(Redeem)1240_storage",
        "encoding": "dynamic_array",
        "label": "struct Marketplace.Redeem[]",
        "numberOfBytes": "32"
      },
      "t_enum(ProductState)1212": {
        "encoding": "inplace",
        "label": "enum Marketplace.ProductState",
        "numberOfBytes": "1"
      },
      "t_mapping(t_address,t_uint256)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_mapping(t_string_memory_ptr,t_struct(Order)1235_storage)": {
        "encoding": "mapping",
        "key": "t_string_memory_ptr",
        "label": "mapping(string => struct Marketplace.Order)",
        "numberOfBytes": "32",
        "value": "t_struct(Order)1235_storage"
      },
      "t_mapping(t_string_memory_ptr,t_struct(Product)1226_storage)": {
        "encoding": "mapping",
        "key": "t_string_memory_ptr",
        "label": "mapping(string => struct Marketplace.Product)",
        "numberOfBytes": "32",
        "value": "t_struct(Product)1226_storage"
      },
      "t_string_memory_ptr": {
        "encoding": "bytes",
        "label": "string",
        "numberOfBytes": "32"
      },
      "t_string_storage": {
        "encoding": "bytes",
        "label": "string",
        "numberOfBytes": "32"
      },
      "t_struct(Order)1235_storage": {
        "encoding": "inplace",
        "label": "struct Marketplace.Order",
        "members": [
          {
            "astId": 1228,
            "contract": "contracts/Marketplace.sol:Marketplace",
            "label": "productID",
            "offset": 0,
            "slot": "0",
            "type": "t_string_storage"
          },
          {
            "astId": 1230,
            "contract": "contracts/Marketplace.sol:Marketplace",
            "label": "amount",
            "offset": 0,
            "slot": "1",
            "type": "t_uint256"
          },
          {
            "astId": 1232,
            "contract": "contracts/Marketplace.sol:Marketplace",
            "label": "buyerAddress",
            "offset": 0,
            "slot": "2",
            "type": "t_address"
          },
          {
            "astId": 1234,
            "contract": "contracts/Marketplace.sol:Marketplace",
            "label": "buyerID",
            "offset": 0,
            "slot": "3",
            "type": "t_string_storage"
          }
        ],
        "numberOfBytes": "128"
      },
      "t_struct(Product)1226_storage": {
        "encoding": "inplace",
        "label": "struct Marketplace.Product",
        "members": [
          {
            "astId": 1214,
            "contract": "contracts/Marketplace.sol:Marketplace",
            "label": "productID",
            "offset": 0,
            "slot": "0",
            "type": "t_string_storage"
          },
          {
            "astId": 1216,
            "contract": "contracts/Marketplace.sol:Marketplace",
            "label": "amount",
            "offset": 0,
            "slot": "1",
            "type": "t_uint256"
          },
          {
            "astId": 1218,
            "contract": "contracts/Marketplace.sol:Marketplace",
            "label": "wallet",
            "offset": 0,
            "slot": "2",
            "type": "t_address"
          },
          {
            "astId": 1220,
            "contract": "contracts/Marketplace.sol:Marketplace",
            "label": "hash",
            "offset": 0,
            "slot": "3",
            "type": "t_string_storage"
          },
          {
            "astId": 1222,
            "contract": "contracts/Marketplace.sol:Marketplace",
            "label": "merchantID",
            "offset": 0,
            "slot": "4",
            "type": "t_string_storage"
          },
          {
            "astId": 1225,
            "contract": "contracts/Marketplace.sol:Marketplace",
            "label": "state",
            "offset": 0,
            "slot": "5",
            "type": "t_enum(ProductState)1212"
          }
        ],
        "numberOfBytes": "192"
      },
      "t_struct(Redeem)1240_storage": {
        "encoding": "inplace",
        "label": "struct Marketplace.Redeem",
        "members": [
          {
            "astId": 1237,
            "contract": "contracts/Marketplace.sol:Marketplace",
            "label": "id",
            "offset": 0,
            "slot": "0",
            "type": "t_address"
          },
          {
            "astId": 1239,
            "contract": "contracts/Marketplace.sol:Marketplace",
            "label": "gas",
            "offset": 0,
            "slot": "1",
            "type": "t_uint256"
          }
        ],
        "numberOfBytes": "64"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}